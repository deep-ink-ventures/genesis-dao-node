
//! Autogenerated weights for pallet_dao_assets
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-11-01, STEPS: `20`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `chp`, CPU: `12th Gen Intel(R) Core(TM) i7-12700H`
//! EXECUTION: , WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/genesis-dao-solochain
// benchmark
// pallet
// --chain
// dev
// --pallet
// pallet_dao_assets
// --extrinsic
// *
// --steps
// 20
// --repeat
// 10
// --output
// pallets/dao-votes/src/weights.rs
// --template
// ./benchmarking/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_dao_assets.
pub trait WeightInfo {
	fn start_destroy() -> Weight;
	fn destroy_accounts(c: u32, ) -> Weight;
	fn destroy_approvals(a: u32, ) -> Weight;
	fn finish_destroy() -> Weight;
	fn transfer() -> Weight;
	fn transfer_keep_alive() -> Weight;
	fn approve_transfer() -> Weight;
	fn transfer_approved() -> Weight;
	fn cancel_approval() -> Weight;
	fn delegate() -> Weight;
	fn revoke_delegation() -> Weight;
}

/// Weights for pallet_dao_assets using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `MaxEncodedLen`)
	/// Storage: `Assets::SupplyHistory` (r:0 w:1)
	/// Proof: `Assets::SupplyHistory` (`max_values`: None, `max_size`: Some(14400024), added: 14402499, mode: `MaxEncodedLen`)
	fn start_destroy() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `226`
		//  Estimated: `3558`
		// Minimum execution time: 60_056_000 picoseconds.
		Weight::from_parts(65_120_000, 3558)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:1001 w:1000)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(100), added: 2575, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1000 w:1000)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Assets::AccountHistory` (r:1000 w:1000)
	/// Proof: `Assets::AccountHistory` (`max_values`: None, `max_size`: Some(4906), added: 7381, mode: `MaxEncodedLen`)
	/// The range of component `c` is `[0, 1000]`.
	fn destroy_accounts(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + c * (332 ±0)`
		//  Estimated: `3565 + c * (7381 ±0)`
		// Minimum execution time: 62_476_000 picoseconds.
		Weight::from_parts(62_845_000, 3565)
			// Standard Error: 1_433_964
			.saturating_add(Weight::from_parts(77_887_086, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().reads((3_u64).saturating_mul(c.into())))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(T::DbWeight::get().writes((3_u64).saturating_mul(c.into())))
			.saturating_add(Weight::from_parts(0, 7381).saturating_mul(c.into()))
	}
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Approvals` (r:1001 w:1000)
	/// Proof: `Assets::Approvals` (`max_values`: None, `max_size`: Some(148), added: 2623, mode: `MaxEncodedLen`)
	/// The range of component `a` is `[0, 1000]`.
	fn destroy_approvals(a: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `321 + a * (86 ±0)`
		//  Estimated: `3613 + a * (2623 ±0)`
		// Minimum execution time: 40_935_000 picoseconds.
		Weight::from_parts(4_758_539_341, 3613)
			// Standard Error: 1_010_952
			.saturating_add(Weight::from_parts(9_599_096, 0).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(a.into())))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(a.into())))
			.saturating_add(Weight::from_parts(0, 2623).saturating_mul(a.into()))
	}
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Metadata` (r:1 w:0)
	/// Proof: `Assets::Metadata` (`max_values`: None, `max_size`: Some(123), added: 2598, mode: `MaxEncodedLen`)
	fn finish_destroy() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `126`
		//  Estimated: `3588`
		// Minimum execution time: 11_067_000 picoseconds.
		Weight::from_parts(11_880_000, 3588)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(100), added: 2575, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Metadata` (r:1 w:0)
	/// Proof: `Assets::Metadata` (`max_values`: None, `max_size`: Some(123), added: 2598, mode: `MaxEncodedLen`)
	/// Storage: `DaoCore::Daos` (r:1 w:0)
	/// Proof: `DaoCore::Daos` (`max_values`: None, `max_size`: Some(428), added: 2903, mode: `MaxEncodedLen`)
	/// Storage: `Assets::AccountHistory` (r:1 w:1)
	/// Proof: `Assets::AccountHistory` (`max_values`: None, `max_size`: Some(4906), added: 7381, mode: `MaxEncodedLen`)
	fn transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `413`
		//  Estimated: `8371`
		// Minimum execution time: 52_561_000 picoseconds.
		Weight::from_parts(55_494_000, 8371)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(100), added: 2575, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Metadata` (r:1 w:0)
	/// Proof: `Assets::Metadata` (`max_values`: None, `max_size`: Some(123), added: 2598, mode: `MaxEncodedLen`)
	/// Storage: `DaoCore::Daos` (r:1 w:0)
	/// Proof: `DaoCore::Daos` (`max_values`: None, `max_size`: Some(428), added: 2903, mode: `MaxEncodedLen`)
	/// Storage: `Assets::AccountHistory` (r:3 w:3)
	/// Proof: `Assets::AccountHistory` (`max_values`: None, `max_size`: Some(4906), added: 7381, mode: `MaxEncodedLen`)
	fn transfer_keep_alive() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `417`
		//  Estimated: `23133`
		// Minimum execution time: 62_535_000 picoseconds.
		Weight::from_parts(63_829_000, 23133)
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
	}
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Approvals` (r:1 w:1)
	/// Proof: `Assets::Approvals` (`max_values`: None, `max_size`: Some(148), added: 2623, mode: `MaxEncodedLen`)
	fn approve_transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `226`
		//  Estimated: `3613`
		// Minimum execution time: 29_683_000 picoseconds.
		Weight::from_parts(30_663_000, 3613)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Approvals` (r:1 w:1)
	/// Proof: `Assets::Approvals` (`max_values`: None, `max_size`: Some(148), added: 2623, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(100), added: 2575, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Metadata` (r:1 w:0)
	/// Proof: `Assets::Metadata` (`max_values`: None, `max_size`: Some(123), added: 2598, mode: `MaxEncodedLen`)
	/// Storage: `DaoCore::Daos` (r:1 w:0)
	/// Proof: `DaoCore::Daos` (`max_values`: None, `max_size`: Some(428), added: 2903, mode: `MaxEncodedLen`)
	/// Storage: `Assets::AccountHistory` (r:1 w:1)
	/// Proof: `Assets::AccountHistory` (`max_values`: None, `max_size`: Some(4906), added: 7381, mode: `MaxEncodedLen`)
	fn transfer_approved() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `583`
		//  Estimated: `8371`
		// Minimum execution time: 70_082_000 picoseconds.
		Weight::from_parts(71_883_000, 8371)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Approvals` (r:1 w:1)
	/// Proof: `Assets::Approvals` (`max_values`: None, `max_size`: Some(148), added: 2623, mode: `MaxEncodedLen`)
	fn cancel_approval() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `396`
		//  Estimated: `3613`
		// Minimum execution time: 32_052_000 picoseconds.
		Weight::from_parts(32_624_000, 3613)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `Assets::AccountHistory` (r:3 w:3)
	/// Proof: `Assets::AccountHistory` (`max_values`: None, `max_size`: Some(4906), added: 7381, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Metadata` (r:1 w:0)
	/// Proof: `Assets::Metadata` (`max_values`: None, `max_size`: Some(123), added: 2598, mode: `MaxEncodedLen`)
	/// Storage: `DaoCore::Daos` (r:1 w:0)
	/// Proof: `DaoCore::Daos` (`max_values`: None, `max_size`: Some(428), added: 2903, mode: `MaxEncodedLen`)
	fn delegate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `333`
		//  Estimated: `23133`
		// Minimum execution time: 31_672_000 picoseconds.
		Weight::from_parts(32_535_000, 23133)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `Assets::AccountHistory` (r:4 w:4)
	/// Proof: `Assets::AccountHistory` (`max_values`: None, `max_size`: Some(4906), added: 7381, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Metadata` (r:1 w:0)
	/// Proof: `Assets::Metadata` (`max_values`: None, `max_size`: Some(123), added: 2598, mode: `MaxEncodedLen`)
	/// Storage: `DaoCore::Daos` (r:1 w:0)
	/// Proof: `DaoCore::Daos` (`max_values`: None, `max_size`: Some(428), added: 2903, mode: `MaxEncodedLen`)
	fn revoke_delegation() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `500`
		//  Estimated: `30514`
		// Minimum execution time: 37_686_000 picoseconds.
		Weight::from_parts(39_123_000, 30514)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `MaxEncodedLen`)
	/// Storage: `Assets::SupplyHistory` (r:0 w:1)
	/// Proof: `Assets::SupplyHistory` (`max_values`: None, `max_size`: Some(14400024), added: 14402499, mode: `MaxEncodedLen`)
	fn start_destroy() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `226`
		//  Estimated: `3558`
		// Minimum execution time: 60_056_000 picoseconds.
		Weight::from_parts(65_120_000, 3558)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:1001 w:1000)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(100), added: 2575, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1000 w:1000)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Assets::AccountHistory` (r:1000 w:1000)
	/// Proof: `Assets::AccountHistory` (`max_values`: None, `max_size`: Some(4906), added: 7381, mode: `MaxEncodedLen`)
	/// The range of component `c` is `[0, 1000]`.
	fn destroy_accounts(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + c * (332 ±0)`
		//  Estimated: `3565 + c * (7381 ±0)`
		// Minimum execution time: 62_476_000 picoseconds.
		Weight::from_parts(62_845_000, 3565)
			// Standard Error: 1_433_964
			.saturating_add(Weight::from_parts(77_887_086, 0).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().reads((3_u64).saturating_mul(c.into())))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(RocksDbWeight::get().writes((3_u64).saturating_mul(c.into())))
			.saturating_add(Weight::from_parts(0, 7381).saturating_mul(c.into()))
	}
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Approvals` (r:1001 w:1000)
	/// Proof: `Assets::Approvals` (`max_values`: None, `max_size`: Some(148), added: 2623, mode: `MaxEncodedLen`)
	/// The range of component `a` is `[0, 1000]`.
	fn destroy_approvals(a: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `321 + a * (86 ±0)`
		//  Estimated: `3613 + a * (2623 ±0)`
		// Minimum execution time: 40_935_000 picoseconds.
		Weight::from_parts(4_758_539_341, 3613)
			// Standard Error: 1_010_952
			.saturating_add(Weight::from_parts(9_599_096, 0).saturating_mul(a.into()))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(a.into())))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(a.into())))
			.saturating_add(Weight::from_parts(0, 2623).saturating_mul(a.into()))
	}
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Metadata` (r:1 w:0)
	/// Proof: `Assets::Metadata` (`max_values`: None, `max_size`: Some(123), added: 2598, mode: `MaxEncodedLen`)
	fn finish_destroy() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `126`
		//  Estimated: `3588`
		// Minimum execution time: 11_067_000 picoseconds.
		Weight::from_parts(11_880_000, 3588)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(100), added: 2575, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Metadata` (r:1 w:0)
	/// Proof: `Assets::Metadata` (`max_values`: None, `max_size`: Some(123), added: 2598, mode: `MaxEncodedLen`)
	/// Storage: `DaoCore::Daos` (r:1 w:0)
	/// Proof: `DaoCore::Daos` (`max_values`: None, `max_size`: Some(428), added: 2903, mode: `MaxEncodedLen`)
	/// Storage: `Assets::AccountHistory` (r:1 w:1)
	/// Proof: `Assets::AccountHistory` (`max_values`: None, `max_size`: Some(4906), added: 7381, mode: `MaxEncodedLen`)
	fn transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `413`
		//  Estimated: `8371`
		// Minimum execution time: 52_561_000 picoseconds.
		Weight::from_parts(55_494_000, 8371)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(100), added: 2575, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Metadata` (r:1 w:0)
	/// Proof: `Assets::Metadata` (`max_values`: None, `max_size`: Some(123), added: 2598, mode: `MaxEncodedLen`)
	/// Storage: `DaoCore::Daos` (r:1 w:0)
	/// Proof: `DaoCore::Daos` (`max_values`: None, `max_size`: Some(428), added: 2903, mode: `MaxEncodedLen`)
	/// Storage: `Assets::AccountHistory` (r:3 w:3)
	/// Proof: `Assets::AccountHistory` (`max_values`: None, `max_size`: Some(4906), added: 7381, mode: `MaxEncodedLen`)
	fn transfer_keep_alive() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `417`
		//  Estimated: `23133`
		// Minimum execution time: 62_535_000 picoseconds.
		Weight::from_parts(63_829_000, 23133)
			.saturating_add(RocksDbWeight::get().reads(9_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
	}
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Approvals` (r:1 w:1)
	/// Proof: `Assets::Approvals` (`max_values`: None, `max_size`: Some(148), added: 2623, mode: `MaxEncodedLen`)
	fn approve_transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `226`
		//  Estimated: `3613`
		// Minimum execution time: 29_683_000 picoseconds.
		Weight::from_parts(30_663_000, 3613)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Approvals` (r:1 w:1)
	/// Proof: `Assets::Approvals` (`max_values`: None, `max_size`: Some(148), added: 2623, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Account` (r:2 w:2)
	/// Proof: `Assets::Account` (`max_values`: None, `max_size`: Some(100), added: 2575, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Metadata` (r:1 w:0)
	/// Proof: `Assets::Metadata` (`max_values`: None, `max_size`: Some(123), added: 2598, mode: `MaxEncodedLen`)
	/// Storage: `DaoCore::Daos` (r:1 w:0)
	/// Proof: `DaoCore::Daos` (`max_values`: None, `max_size`: Some(428), added: 2903, mode: `MaxEncodedLen`)
	/// Storage: `Assets::AccountHistory` (r:1 w:1)
	/// Proof: `Assets::AccountHistory` (`max_values`: None, `max_size`: Some(4906), added: 7381, mode: `MaxEncodedLen`)
	fn transfer_approved() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `583`
		//  Estimated: `8371`
		// Minimum execution time: 70_082_000 picoseconds.
		Weight::from_parts(71_883_000, 8371)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: `Assets::Asset` (r:1 w:1)
	/// Proof: `Assets::Asset` (`max_values`: None, `max_size`: Some(93), added: 2568, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Approvals` (r:1 w:1)
	/// Proof: `Assets::Approvals` (`max_values`: None, `max_size`: Some(148), added: 2623, mode: `MaxEncodedLen`)
	fn cancel_approval() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `396`
		//  Estimated: `3613`
		// Minimum execution time: 32_052_000 picoseconds.
		Weight::from_parts(32_624_000, 3613)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `Assets::AccountHistory` (r:3 w:3)
	/// Proof: `Assets::AccountHistory` (`max_values`: None, `max_size`: Some(4906), added: 7381, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Metadata` (r:1 w:0)
	/// Proof: `Assets::Metadata` (`max_values`: None, `max_size`: Some(123), added: 2598, mode: `MaxEncodedLen`)
	/// Storage: `DaoCore::Daos` (r:1 w:0)
	/// Proof: `DaoCore::Daos` (`max_values`: None, `max_size`: Some(428), added: 2903, mode: `MaxEncodedLen`)
	fn delegate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `333`
		//  Estimated: `23133`
		// Minimum execution time: 31_672_000 picoseconds.
		Weight::from_parts(32_535_000, 23133)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `Assets::AccountHistory` (r:4 w:4)
	/// Proof: `Assets::AccountHistory` (`max_values`: None, `max_size`: Some(4906), added: 7381, mode: `MaxEncodedLen`)
	/// Storage: `Assets::Metadata` (r:1 w:0)
	/// Proof: `Assets::Metadata` (`max_values`: None, `max_size`: Some(123), added: 2598, mode: `MaxEncodedLen`)
	/// Storage: `DaoCore::Daos` (r:1 w:0)
	/// Proof: `DaoCore::Daos` (`max_values`: None, `max_size`: Some(428), added: 2903, mode: `MaxEncodedLen`)
	fn revoke_delegation() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `500`
		//  Estimated: `30514`
		// Minimum execution time: 37_686_000 picoseconds.
		Weight::from_parts(39_123_000, 30514)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
}
