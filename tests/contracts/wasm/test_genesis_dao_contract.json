{
  "source": {
    "hash": "0x440e3e840fe5ad0609b71b84aadebc3af10d4983c75aa628ae5d2269a257f920",
    "language": "ink! 4.3.0",
    "compiler": "rustc 1.74.0-nightly",
    "build_info": {
      "build_mode": "Debug",
      "cargo_contract_version": "3.2.0",
      "rust_toolchain": "nightly-x86_64-unknown-linux-gnu",
      "wasm_opt_settings": {
        "keep_debug_symbols": false,
        "optimization_passes": "Z"
      }
    }
  },
  "contract": {
    "name": "genesis-dao-contract",
    "version": "1.0.0",
    "authors": [
      "chp"
    ]
  },
  "spec": {
    "constructors": [
      {
        "args": [
          {
            "label": "owner",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          "Constructor initializes the contract with an owner.",
          "",
          "# Arguments",
          "- `owner`: AccountId of the owner of the contract."
        ],
        "label": "new",
        "payable": false,
        "returnType": {
          "displayName": [
            "ink_primitives",
            "ConstructorResult"
          ],
          "type": 4
        },
        "selector": "0x9bae9d5e"
      }
    ],
    "docs": [
      " Genesis DAO Contract",
      "",
      " This contract manages vote plugins that can affect the voting power",
      " of DAO members in various ways. It acts as a registry and a hook",
      " point for voting in the DAO."
    ],
    "environment": {
      "accountId": {
        "displayName": [
          "AccountId"
        ],
        "type": 0
      },
      "balance": {
        "displayName": [
          "Balance"
        ],
        "type": 9
      },
      "blockNumber": {
        "displayName": [
          "BlockNumber"
        ],
        "type": 13
      },
      "chainExtension": {
        "displayName": [
          "ChainExtension"
        ],
        "type": 14
      },
      "hash": {
        "displayName": [
          "Hash"
        ],
        "type": 11
      },
      "maxEventTopics": 4,
      "timestamp": {
        "displayName": [
          "Timestamp"
        ],
        "type": 12
      }
    },
    "events": [
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "plugin",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "docs": [
          "Event emitted when a new vote plugin is registered."
        ],
        "label": "VotePluginRegistered"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "plugin",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "docs": [
          "Event emitted when a vote plugin is removed."
        ],
        "label": "VotePluginRemoved"
      }
    ],
    "lang_error": {
      "displayName": [
        "ink",
        "LangError"
      ],
      "type": 6
    },
    "messages": [
      {
        "args": [
          {
            "label": "new_owner",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          " Transfers ownership of the contract to a new owner.",
          "",
          " # Arguments",
          "",
          " - `new_owner`: AccountId of the new owner."
        ],
        "label": "transfer_ownership",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 4
        },
        "selector": "0x107e33ea"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Retrieve the current owner",
          "",
          " # Returns",
          " - `AccountId`: AccountId of the current owner."
        ],
        "label": "get_owner",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 7
        },
        "selector": "0x07fcd0b1"
      },
      {
        "args": [
          {
            "label": "vote_plugin",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          " Registers a new vote plugin.",
          "",
          " Adds the given vote plugin to the list of registered vote plugins",
          " if it is not already present.",
          "",
          " # Arguments",
          "",
          " - `vote_plugin`: AccountId of the vote plugin contract."
        ],
        "label": "register_vote_plugin",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 4
        },
        "selector": "0x10ca8f4a"
      },
      {
        "args": [
          {
            "label": "vote_plugin",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          " Removes a vote plugin.",
          "",
          " Removes the given vote plugin from the list of registered vote plugins.",
          "",
          " # Arguments",
          "",
          " - `vote_plugin`: AccountId of the vote plugin contract."
        ],
        "label": "remove_vote_plugin",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 4
        },
        "selector": "0xc196793a"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Gets all registered vote plugins.",
          "",
          " Returns a list of AccountIds for all registered vote plugins.",
          "",
          " # Returns",
          "",
          " - `Vec<AccountId>`: List of registered vote plugins."
        ],
        "label": "get_vote_plugins",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 8
        },
        "selector": "0xcb5308b1"
      },
      {
        "args": [
          {
            "label": "voter",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "label": "voting_power",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 9
            }
          }
        ],
        "default": false,
        "docs": [
          " `on_vote` Hook Point",
          "",
          " This function gets called when a vote is made. It iterates through",
          " all registered vote plugins and updates the voting power of the voter.",
          "",
          " # Arguments",
          "",
          " - `voter`: AccountId of the voter.",
          " - `voting_power`: Initial voting power of the voter.",
          "",
          " # Returns",
          "",
          " - `Balance`: Updated voting power after considering all vote plugins."
        ],
        "label": "GenesisDao::on_vote",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 10
        },
        "selector": "0x71efc70c"
      }
    ]
  },
  "storage": {
    "root": {
      "layout": {
        "struct": {
          "fields": [
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 0
                }
              },
              "name": "owner"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 3
                }
              },
              "name": "vote_plugins"
            }
          ],
          "name": "GenesisDao"
        }
      },
      "root_key": "0x00000000"
    }
  },
  "types": [
    {
      "id": 0,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "AccountId"
        ]
      }
    },
    {
      "id": 1,
      "type": {
        "def": {
          "array": {
            "len": 32,
            "type": 2
          }
        }
      }
    },
    {
      "id": 2,
      "type": {
        "def": {
          "primitive": "u8"
        }
      }
    },
    {
      "id": 3,
      "type": {
        "def": {
          "sequence": {
            "type": 0
          }
        }
      }
    },
    {
      "id": 4,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 5
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 6
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 5
          },
          {
            "name": "E",
            "type": 6
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 5,
      "type": {
        "def": {
          "tuple": []
        }
      }
    },
    {
      "id": 6,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 1,
                "name": "CouldNotReadInput"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "LangError"
        ]
      }
    },
    {
      "id": 7,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 0
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 6
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 0
          },
          {
            "name": "E",
            "type": 6
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 8,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 3
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 6
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 3
          },
          {
            "name": "E",
            "type": 6
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 9,
      "type": {
        "def": {
          "primitive": "u128"
        }
      }
    },
    {
      "id": 10,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 9
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 6
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 9
          },
          {
            "name": "E",
            "type": 6
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 11,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "Hash"
        ]
      }
    },
    {
      "id": 12,
      "type": {
        "def": {
          "primitive": "u64"
        }
      }
    },
    {
      "id": 13,
      "type": {
        "def": {
          "primitive": "u32"
        }
      }
    },
    {
      "id": 14,
      "type": {
        "def": {
          "variant": {}
        },
        "path": [
          "ink_env",
          "types",
          "NoChainExtension"
        ]
      }
    }
  ],
  "version": "4"
}